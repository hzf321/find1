{"version":3,"sources":["assets/script/tool/AssetUtils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n//资源加载工具类\r\n\r\nimport AutoReleaseAssets from \"./BxAutoAsset\";\r\nimport { Global } from \"./global\";\r\n\r\nexport type AssetCallFunc = (err: Error, assetData: cc.Asset) => void;\r\n\r\nexport class AssetUtils {\r\n\r\n    // 绑定资源释放\r\n    public static bindAutoReleaseAsset(parent: cc.Node, asset: cc.Asset): void {\r\n        let tempAuto = parent.getComponent(AutoReleaseAssets);\r\n        if (!cc.isValid(tempAuto)) {\r\n            tempAuto = parent.addComponent(AutoReleaseAssets);\r\n        }\r\n        tempAuto.addAutoReleaseAsset(asset);\r\n    }\r\n\r\n    // 检测引用计数后释放资源\r\n    public static checkAndReleaseAsset(asset: cc.Asset): void {\r\n        if (cc.isValid(asset) && asset.refCount <= 0) {\r\n            cc.assetManager.releaseAsset(asset);\r\n        }\r\n    }\r\n\r\n    //加载(必须配合addAutoReleaseAsset 使用绑定资源)\r\n    public static loadAsset(assetPath: string, assetType: typeof cc.Asset, assetCb: AssetCallFunc): void {\r\n        cc.resources.load(assetPath, assetType, assetCb);\r\n    }\r\n\r\n    //预加载\r\n    public static preloadAsset(assetPath: string, assetType: typeof cc.Asset): void {\r\n        cc.resources.preload(assetPath, assetType);\r\n    }\r\n\r\n    // 加载单张图片\r\n    public static loadSprite(picPath: string, sprite: cc.Sprite, defPath?: string) {\r\n        let finishCallback = (err, sp: cc.SpriteFrame) => {\r\n            if (err) {\r\n                if (defPath) {\r\n                    this.loadSprite(defPath, sprite);\r\n                } else {\r\n                }\r\n                return;\r\n            }\r\n            if (cc.isValid(sprite) && sprite[\"newUrl\"] == picPath) {\r\n                sprite.addAutoReleaseAsset(sp);\r\n                sprite.spriteFrame = sp;\r\n            } else {\r\n                this.checkAndReleaseAsset(sp);\r\n            }\r\n        }\r\n        sprite[\"newUrl\"] = picPath;// 记录最新url 防止多次请求异步设置了旧的\r\n        sprite.spriteFrame = null;//置空 防止玩家看到旧的道具误会\r\n        cc.resources.load(picPath, cc.SpriteFrame, finishCallback);\r\n    }\r\n\r\n    //----------------资源加载------------------------\r\n    public static showDialog(url: string, data?, callback?) {\r\n        cc.resources.load(\"prefeb/\" + url, cc.Prefab, (err, prefab) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n\r\n            let node = cc.instantiate(prefab);\r\n            Global.assetUtils.bindAutoReleaseAsset(node, prefab);\r\n            let parentNode = Global.getsceneNode();\r\n            if (node && parentNode) {\r\n                if (data) {\r\n                    cc.log(url, \"confirmExit_dialog\")\r\n                    if (node.getComponent(url).initData) {\r\n                        node.getComponent(url).initData(data)\r\n                    }\r\n                }\r\n                parentNode.addChild(node);\r\n                let content = node.getChildByName(\"content\");\r\n                content.scale = 0;\r\n                cc.Tween.stopAllByTarget(content);\r\n                cc.tween(content)\r\n                    .to(0.32, { scale: 1 }, { easing: 'backOut' })\r\n                    .start();\r\n            }\r\n            callback && callback();\r\n        })\r\n    }\r\n}\r\n"]}